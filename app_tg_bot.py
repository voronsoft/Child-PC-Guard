import os
import sys
import function
import asyncio
import logging
import threading
from telegram import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters, CallbackQueryHandler

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–æ–∫–µ–Ω–∞
TOKEN = function.read_data_json("bot_token_telegram")

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
application = None


# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

PID_FILE = "bot.pid"

# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
CORRECT_PASSWORD = function.get_password_from_registry()
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
authorized_users = set(str(function.read_data_json("id_tg_bot_parent")))


def check_if_running():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±–æ—Ç —É–∂–µ, –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ, –µ—Å–ª–∏ –¥–∞."""
    if os.path.exists(PID_FILE):
        with open(PID_FILE, "r") as f:
            pid = int(f.read())
            if os.path.exists(f"/proc/{pid}"):
                print(f"–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω —Å PID {pid}. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ.")
                sys.exit(1)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π PID –≤ —Ñ–∞–π–ª
    with open(PID_FILE, "w") as f:
        f.write(str(os.getpid()))


def remove_pid_file():
    """–£–¥–∞–ª–µ–Ω–∏–µ PID-—Ñ–∞–π–ª–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏."""
    if os.path.exists(PID_FILE):
        os.remove(PID_FILE)


async def shutdown(application):
    """–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."""
    print("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")

    # –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
    if application.updater is not None:
        application.updater.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥

    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞—á
    await application.stop()  # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É
    # –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ü–µ—Å—Å
    os._exit(0)  # 0 –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    sys.exit(0)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat.id

    await update.message.reply_text(f"–í–∞—à chat_id: {chat_id}\n"
                                    f"–≠—Ç–æ—Ç –Ω–æ–º–µ—Ä –≤–∞–º –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ - Child PC Guard\n"
                                    f"–ù–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é - '–ü–æ–¥–∫–ª—é—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ - Telegram'\n"
                                    f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ - –û–ö\n"
                                    f"–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è"
                                    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if chat_id not in authorized_users:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:")
    else:
        await show_menu(update)


async def check_password(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat.id
    text = update.message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    if chat_id in authorized_users:
        await handle_message(update, context)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    if function.check_password(text, CORRECT_PASSWORD):
        authorized_users.add(chat_id)
        await update.message.reply_text("–ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π! –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω.")
        await show_menu(update)
    else:
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


async def show_menu(update: Update):
    keyboard = [
            [KeyboardButton("üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ü–ö"),
             KeyboardButton("üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ü–ö")],
            [KeyboardButton("üíª –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö"),
             KeyboardButton("‚ö†Ô∏è –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")],
            [KeyboardButton("‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"),
             KeyboardButton("‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")],
            [KeyboardButton("‚è≤Ô∏è –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
    await update.message.reply_text('–ú–µ–Ω—é:', reply_markup=reply_markup)


async def choose_time(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
            [InlineKeyboardButton("1 —á–∞—Å", callback_data='1'), InlineKeyboardButton("2 —á–∞—Å–∞", callback_data='2')],
            [InlineKeyboardButton("3 —á–∞—Å–∞", callback_data='3'), InlineKeyboardButton("4 —á–∞—Å–∞", callback_data='4')],
            [InlineKeyboardButton("5 —á–∞—Å–æ–≤", callback_data='5')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:', reply_markup=reply_markup)


async def handle_time_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    time_selected = query.data
    await query.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {time_selected.replace('_', ' ')} —á–∞—Å–∞(–æ–≤) –¥–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏.\n"
                                   f"–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è –≤—ã–π–¥–µ—Ç, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."
                                   )


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    chat_id = update.message.chat.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if chat_id not in authorized_users:
        await update.message.reply_text("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å.")
        return

    if text == "üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ü–ö":
        await update.message.reply_text("üîí –ü–ö –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    elif text == "üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ü–ö":
        await update.message.reply_text("üîì –ü–ö —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
    elif text == "üíª –í—ã–∫–ª—é—á–∏—Ç—å –ü–ö":
        await update.message.reply_text("üíª –ü–ö –≤—ã–∫–ª—é—á–µ–Ω.")
    elif text == "‚ö†Ô∏è –í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ":
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–≤–µ–¥–µ–Ω–æ.")
    elif text == "‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ":
        await update.message.reply_text("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–∫–ª—é—á–µ–Ω–æ.")
    elif text == "‚ñ∂Ô∏è –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ":
        await update.message.reply_text("‚ñ∂Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ.")
    elif text == "‚è≤Ô∏è –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏":
        await choose_time(update, context)
    elif text.lower() == "stop":  # –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "stop"
        await update.message.reply_text("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")

        remove_pid_file()  # –£–¥–∞–ª—è–µ–º PID —Ñ–∞–π–ª
        await shutdown(application)  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞


async def main_bot_run():
    global application  # –û–±—ä—è–≤–ª—è–µ–º application –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –±–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω
    check_if_running()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
    application = Application.builder().token(TOKEN).build()

    # –ö–æ–º–∞–Ω–¥–∞ /start –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–µ–Ω—é
    application.add_handler(CommandHandler("start", start))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, check_password))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(handle_time_selection))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await application.initialize()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await application.start()
    await application.updater.start_polling()

    # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
    try:
        await asyncio.Event().wait()  # –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –∂–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    except (KeyboardInterrupt, SystemExit):
        print("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")

    # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
    await shutdown(application)

    # –£–¥–∞–ª—è–µ–º PID-—Ñ–∞–π–ª –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    remove_pid_file()  # –£–¥–∞–ª—è–µ–º PID-—Ñ–∞–π–ª –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏


# --------------------------------------------------------------------------------------------------


if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    asyncio.run(main_bot_run())
